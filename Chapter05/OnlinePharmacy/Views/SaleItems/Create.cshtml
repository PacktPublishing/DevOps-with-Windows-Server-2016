@model OnlinePharmacy.Models.SaleItem

@{
    ViewBag.Title = "Add new drug line items..";
}

<h2>Add new drug line items</h2>
<script type="text/javascript">
    function QuantityChange() {
        var q = parseInt(Number(document.getElementById('Quantity').value));
        var r = parseInt(Number(document.getElementById('Rate').value));
        var t = 0;
        if (q == 0 || r == 0)
        {
            t = 0;
        } else if (q == 0 && r == 0)
        {
            t = 0;
        }
        else
        {
            t = q * r
        }
        if (!isNaN(t)) {
            document.getElementById('Total').value = t;
        }

    };
    function RateChange() {
        var q = parseInt(Number(document.getElementById('Quantity').value));
        var r = parseInt(Number(document.getElementById('Rate').value));
        var t = 0;
        if (q == 0 || r == 0) {
            t = 0;
        } else if (q == 0 && r == 0) {
            t = 0;
        }
        else {
            t = q * r
        }
        if (!isNaN(t)) {
            document.getElementById('Total').value = t;
        }

    };
    function EmptyInputs(dropdownvalue) {
        document.getElementById('Quantity').value = 0;
        document.getElementById('Rate').value = 0;

    }
</script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>SaleItem</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.MedicineID, "MedicineID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("MedicineID", null, "--Select One--", htmlAttributes: new { @class = "form-control", onchange = "EmptyInputs()" })
                @Html.ValidationMessageFor(model => model.MedicineID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control", onkeyup = "QuantityChange()" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Rate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Rate, new { htmlAttributes = new { @class = "form-control", onkeyup = "RateChange()" } })
                @Html.ValidationMessageFor(model => model.Rate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Total, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Total, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Total, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SaleID, "SaleID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Raw(ViewBag.SaleID)
                @Html.Hidden("SaleID", (object)ViewBag.SaleID)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", new { id = ViewBag.SaleID }, null)
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
